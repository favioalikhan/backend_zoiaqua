# Generated by Django 5.1.3 on 2024-12-03 00:41

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InsumoProduccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_insumo', models.CharField(choices=[('preforma', 'Preforma'), ('tapa', 'Tapa'), ('etiqueta', 'Etiqueta')], max_length=10)),
                ('proveedor', models.CharField(max_length=100)),
                ('stock_actual', models.IntegerField()),
                ('stock_minimo', models.IntegerField()),
                ('costo_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('valor_actual', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('objetivo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('tipo_reporte', models.CharField(max_length=50)),
                ('datos_reporte', models.JSONField(help_text='Almacena los datos del reporte en formato JSON')),
            ],
        ),
        migrations.CreateModel(
            name='Ruta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('tiempo_estimado', models.IntegerField()),
                ('capacidad', models.IntegerField()),
                ('flexibilidad', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('empleado', 'Empleado'), ('administrador', 'Administrador')], default='empleado', max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(blank=True, max_length=150, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='Los grupos a los que pertenece este usuario.', related_name='custom_user_set', to='auth.group', verbose_name='grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permisos específicos del usuario.', related_name='custom_user_set', to='auth.permission', verbose_name='permisos de usuario')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('apellido_paterno', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('apellido_materno', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('direccion', models.TextField()),
                ('ciudad', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'indexes': [models.Index(fields=['nombre'], name='idx_clientes_nombre')],
            },
        ),
        migrations.CreateModel(
            name='ClienteCluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.cliente')),
            ],
            options={
                'db_table': 'clientes_clusters',
            },
        ),
        migrations.CreateModel(
            name='ClusterGeografico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('area_cobertura', models.TextField()),
                ('prioridad', models.IntegerField()),
                ('clientes', models.ManyToManyField(through='api.ClienteCluster', to='api.cliente')),
            ],
        ),
        migrations.AddField(
            model_name='clientecluster',
            name='cluster',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.clustergeografico'),
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('apellido_paterno', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('apellido_materno', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('dni', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_dni', message='El DNI debe contener 8 dígitos numéricos', regex='^\\d{8}$')], verbose_name='Documento de Identidad')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('fecha_contratacion', models.DateField(help_text='Fecha en que se firma el contrato')),
                ('fecha_ingreso', models.DateField(blank=True, help_text='Fecha real de inicio de trabajo', null=True)),
                ('fecha_baja', models.DateField(blank=True, help_text='Fecha de salida de la empresa', null=True)),
                ('puesto', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(1)])),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('inactivo', 'Inactivo'), ('licencia', 'Licencia'), ('retirado', 'Retirado')], default='activo', max_length=10)),
                ('acceso_sistema', models.BooleanField(default=False, verbose_name='Requiere acceso al sistema')),
                ('departamento_principal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='empleados_principales', to='api.departamento')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ControlSoploBotellas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField()),
                ('proveedor_preforma', models.CharField(choices=[('Ahise', 'Ahise'), ('Damar', 'Damar')], max_length=10)),
                ('peso_gramos', models.DecimalField(decimal_places=2, max_digits=10)),
                ('volumen_botella_ml', models.IntegerField()),
                ('produccion_buena', models.IntegerField()),
                ('produccion_danada', models.IntegerField()),
                ('produccion_total', models.IntegerField()),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.empleado')),
            ],
        ),
        migrations.CreateModel(
            name='ControlProduccionAgua',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_produccion', models.DateTimeField()),
                ('numero_lote', models.CharField(max_length=100, unique=True)),
                ('fecha_vencimiento', models.DateTimeField()),
                ('botellas_envasadas', models.IntegerField()),
                ('botellas_malogradas', models.IntegerField()),
                ('tapas_malogradas', models.IntegerField()),
                ('etiquetas_malogradas', models.IntegerField()),
                ('total_botella_buenas', models.IntegerField()),
                ('total_paquetes', models.IntegerField()),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('control_soplado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.controlsoplobotellas')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.empleado')),
            ],
        ),
        migrations.CreateModel(
            name='Inventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_lote', models.CharField(blank=True, max_length=100, null=True)),
                ('cantidad_actual', models.IntegerField(blank=True, null=True)),
                ('punto_reorden', models.IntegerField(blank=True, null=True)),
                ('stock_minimo', models.IntegerField(blank=True, null=True)),
                ('stock_maximo', models.IntegerField(blank=True, null=True)),
                ('fecha_vencimiento', models.DateTimeField(blank=True, null=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('control_produccion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.controlproduccionagua')),
            ],
        ),
        migrations.CreateModel(
            name='MovimientoInsumo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_movimiento', models.DateTimeField()),
                ('tipo_movimiento', models.CharField(choices=[('entrada', 'Entrada'), ('salida', 'Salida')], max_length=10)),
                ('cantidad', models.IntegerField()),
                ('motivo_movimiento', models.TextField()),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.empleado')),
                ('insumo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.insumoproduccion')),
            ],
        ),
        migrations.CreateModel(
            name='MovimientoInventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_movimiento', models.DateTimeField()),
                ('tipo_movimiento', models.CharField(choices=[('entrada', 'Entrada'), ('salida', 'Salida'), ('ajuste', 'Ajuste')], max_length=10)),
                ('cantidad', models.IntegerField()),
                ('motivo_movimiento', models.TextField()),
                ('documento_referencia', models.CharField(blank=True, max_length=100, null=True)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.empleado')),
                ('inventario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.inventario')),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_pedido', models.DateTimeField(default=django.utils.timezone.now)),
                ('estado_pedido', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmado', 'Confirmado'), ('cancelado', 'Cancelado'), ('entregado', 'Entregado')], max_length=15)),
                ('total_pedido', models.DecimalField(decimal_places=2, max_digits=10)),
                ('direccion_envio', models.TextField()),
                ('fecha_entrega_estimada', models.DateTimeField(blank=True, null=True)),
                ('comentarios', models.TextField(blank=True, null=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Distribucion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_salida', models.DateTimeField()),
                ('fecha_entrega', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('en ruta', 'En Ruta'), ('entregado', 'Entregado'), ('retrasado', 'Retrasado'), ('cancelado', 'Cancelado')], max_length=15)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.empleado')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pedido')),
            ],
        ),
        migrations.CreateModel(
            name='Produccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateTimeField()),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('estado_produccion', models.CharField(choices=[('programada', 'Programada'), ('en proceso', 'En Proceso'), ('completada', 'Completada'), ('cancelada', 'Cancelada')], max_length=15)),
            ],
            options={
                'indexes': [models.Index(fields=['estado_produccion'], name='idx_produccion_estado')],
            },
        ),
        migrations.CreateModel(
            name='ControlCalidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inspeccion', models.DateTimeField()),
                ('resultado', models.CharField(choices=[('aprobado', 'Aprobado'), ('rechazado', 'Rechazado')], max_length=10)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('produccion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.produccion')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unidad_medida', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(1)])),
                ('estado', models.BooleanField(default=True)),
            ],
            options={
                'indexes': [models.Index(fields=['nombre'], name='idx_productos_nombre')],
            },
        ),
        migrations.CreateModel(
            name='Kanban',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField()),
                ('fecha', models.DateTimeField()),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en proceso', 'En Proceso'), ('completado', 'Completado')], max_length=15)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.producto')),
            ],
        ),
        migrations.AddField(
            model_name='inventario',
            name='producto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.producto'),
        ),
        migrations.CreateModel(
            name='DetallePedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField()),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pedido')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.producto')),
            ],
        ),
        migrations.CreateModel(
            name='RegistroSesion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario_id', models.IntegerField()),
                ('tipo_usuario', models.CharField(choices=[('empleado', 'Empleado')], max_length=10)),
                ('fecha_inicio', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('ip_direccion', models.CharField(blank=True, max_length=45, null=True)),
                ('dispositivo', models.CharField(blank=True, max_length=100, null=True)),
                ('exitoso', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'registro_sesiones',
                'indexes': [models.Index(fields=['fecha_inicio'], name='idx_registro_sesiones_fecha')],
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('responsabilidades', models.TextField(blank=True, null=True)),
                ('requiere_acceso_sistema', models.BooleanField(default=False)),
                ('departamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='roles', to='api.departamento')),
            ],
        ),
        migrations.CreateModel(
            name='EmpleadoRol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('es_rol_principal', models.BooleanField(default=False)),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.empleado')),
                ('rol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empleado_roles', to='api.rol')),
            ],
        ),
        migrations.AddField(
            model_name='empleado',
            name='roles',
            field=models.ManyToManyField(through='api.EmpleadoRol', to='api.rol'),
        ),
        migrations.CreateModel(
            name='AsignacionRuta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_asignacion', models.DateTimeField()),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pedido')),
                ('ruta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ruta')),
            ],
        ),
        migrations.CreateModel(
            name='SeguimientoPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_evento', models.DateTimeField(default=django.utils.timezone.now)),
                ('descripcion_evento', models.TextField()),
                ('estado_pedido', models.CharField(max_length=50)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pedido')),
            ],
            options={
                'db_table': 'seguimiento_pedidos',
            },
        ),
        migrations.CreateModel(
            name='SesionChatbot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('activa', 'Activa'), ('cerrada', 'Cerrada')], max_length=10)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.cliente')),
            ],
            options={
                'db_table': 'sesiones_chatbot',
            },
        ),
        migrations.CreateModel(
            name='MensajeChatbot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensaje', models.TextField()),
                ('fecha_envio', models.DateTimeField(default=django.utils.timezone.now)),
                ('enviado_por', models.CharField(choices=[('cliente', 'Cliente'), ('chatbot', 'Chatbot')], max_length=10)),
                ('sesion_chatbot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.sesionchatbot')),
            ],
            options={
                'db_table': 'mensajes_chatbot',
            },
        ),
        migrations.CreateModel(
            name='Venta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_venta', models.DateTimeField()),
                ('estado_venta', models.CharField(choices=[('completada', 'Completada'), ('pendiente', 'Pendiente'), ('cancelada', 'Cancelada')], max_length=15)),
            ],
            options={
                'indexes': [models.Index(fields=['fecha_venta'], name='idx_ventas_fecha'), models.Index(fields=['estado_venta'], name='idx_ventas_estado')],
            },
        ),
        migrations.CreateModel(
            name='DetalleVenta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField()),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.producto')),
                ('venta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.venta')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='clientecluster',
            unique_together={('cliente', 'cluster')},
        ),
        migrations.AddIndex(
            model_name='controlsoplobotellas',
            index=models.Index(fields=['fecha'], name='idx_control_soplado_fecha'),
        ),
        migrations.AddIndex(
            model_name='controlproduccionagua',
            index=models.Index(fields=['fecha_produccion'], name='idx_control_produccion_fecha'),
        ),
        migrations.AddIndex(
            model_name='controlproduccionagua',
            index=models.Index(fields=['numero_lote'], name='idx_control_produccion_lote'),
        ),
        migrations.AddIndex(
            model_name='movimientoinsumo',
            index=models.Index(fields=['fecha_movimiento'], name='idx_movimientos_insumos_fecha'),
        ),
        migrations.AddIndex(
            model_name='movimientoinventario',
            index=models.Index(fields=['fecha_movimiento'], name='idx_inventario_fecha'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['estado_pedido'], name='idx_pedidos_estado'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['fecha_pedido'], name='idx_pedidos_fecha'),
        ),
        migrations.AddIndex(
            model_name='distribucion',
            index=models.Index(fields=['estado'], name='idx_distribucion_estado'),
        ),
        migrations.AddIndex(
            model_name='kanban',
            index=models.Index(fields=['estado'], name='idx_kanban_estado'),
        ),
        migrations.AddIndex(
            model_name='inventario',
            index=models.Index(fields=['producto'], name='idx_inventario_producto'),
        ),
        migrations.AddIndex(
            model_name='inventario',
            index=models.Index(fields=['numero_lote'], name='idx_inventario_lote'),
        ),
        migrations.AddIndex(
            model_name='detallepedido',
            index=models.Index(fields=['pedido'], name='idx_detalle_pedidos_pedido'),
        ),
        migrations.AddIndex(
            model_name='detallepedido',
            index=models.Index(fields=['producto'], name='idx_detalle_pedidos_producto'),
        ),
        migrations.AddIndex(
            model_name='empleadorol',
            index=models.Index(fields=['empleado', 'es_rol_principal'], name='idx_empleado_rol_principal'),
        ),
        migrations.AddConstraint(
            model_name='empleadorol',
            constraint=models.UniqueConstraint(fields=('empleado', 'rol'), name='unique_empleado_rol'),
        ),
        migrations.AddIndex(
            model_name='empleado',
            index=models.Index(fields=['user'], name='idx_empleados_user'),
        ),
        migrations.AddIndex(
            model_name='seguimientopedido',
            index=models.Index(fields=['fecha_evento'], name='idx_seguimiento_pedidos_fecha'),
        ),
        migrations.AddIndex(
            model_name='sesionchatbot',
            index=models.Index(fields=['fecha_inicio'], name='idx_sesiones_chatbot_fecha'),
        ),
        migrations.AddIndex(
            model_name='detalleventa',
            index=models.Index(fields=['venta'], name='idx_detalle_ventas_venta'),
        ),
        migrations.AddIndex(
            model_name='detalleventa',
            index=models.Index(fields=['producto'], name='idx_detalle_ventas_producto'),
        ),
    ]
